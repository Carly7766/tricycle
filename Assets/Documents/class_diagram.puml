@startuml

package Input {
    class KeyInputProvider {
    }
    
    interface IInputProvider {
        GetFrontWheel() : ReactiveProperty<float>
        GetBackWheel() : ReactiveProperty<float>
    }
    KeyInputProvider ..|> IInputProvider
}
package PlayerTricycle {
    class TricycleStatus <<ScriptableObject>> {
        RotateSpeed : float
    }
    
    class WheelRotatePresenter <<IInitializable>> {
        +canInput : bool
        RegisterRotate() : void
    }
    
    class WheelCalculator {
        tricycleStatus : TricycleStatus
        Calculate() : float
    }
    
    interface IWheelRotatable {
        Rotate(axis : float) : void
    }
    
    class WheelBehaviour {
        Rotate(axis : float) : void
    }
    
    class TricycleBehaviour {
        FrontWheel : WheelBehaviour
        RearWheel : WheelRotatable
    }

    class MonoBehaviour { }
    
    TricycleBehaviour --|> MonoBehaviour
    WheelBehaviour --|> MonoBehaviour

    WheelBehaviour ..|> IWheelRotatable
    
    WheelRotatePresenter ..> IInputProvider
    WheelRotatePresenter ..> TricycleBehaviour
    WheelRotatePresenter ..left> WheelCalculator
    
    TricycleBehaviour ..> WheelBehaviour
}
package Game {
    class RetrySequence {
    
    }
}
@enduml
